{
    "request_bodies": {
        "/createShippingCostPolicy": {
            "path": "/createShippingCostPolicy",
            "method": "POST",
            "summary": "Create a shipping cost policy",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 63,
                        "description": "Name of the shipping cost policy"
                    },
                    "label_XX": {
                        "type": "string",
                        "maxLength": 63,
                        "description": "Label shown on orderform. Replace XX with language code"
                    },
                    "position": {
                        "type": "integer",
                        "default": 100,
                        "description": "Display position"
                    },
                    "is_active": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether the policy is active"
                    },
                    "for_product_ids": {
                        "type": "string",
                        "description": "Comma separated list of product IDs this policy applies to"
                    },
                    "for_countries": {
                        "type": "string",
                        "description": "Comma separated list of ISO country codes (e.g. US,DE)"
                    },
                    "for_currencies": {
                        "type": "string",
                        "description": "Comma separated list of currency codes (e.g. USD,EUR)"
                    },
                    "fee_type": {
                        "type": "string",
                        "enum": [
                            "total_fee",
                            "fee_per_unit"
                        ],
                        "description": "Type of fee calculation"
                    },
                    "billing_cycle": {
                        "type": "string",
                        "enum": [
                            "once",
                            "monthly"
                        ],
                        "description": "When the shipping fee is charged"
                    },
                    "currency": {
                        "type": "string",
                        "description": "Currency code for the fees (e.g. USD)"
                    },
                    "scale_level_count": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 5,
                        "default": 1,
                        "description": "Number of discount levels (1-5)"
                    },
                    "scale_1_amount": {
                        "type": "number",
                        "format": "float",
                        "description": "Base shipping cost amount"
                    },
                    "scale_2_from": {
                        "type": "integer",
                        "description": "Number of items for second discount level"
                    },
                    "scale_2_amount": {
                        "type": "number",
                        "format": "float",
                        "description": "Shipping cost for scale_2_from or more items"
                    },
                    "scale_3_from": {
                        "type": "integer",
                        "description": "Number of items for third discount level"
                    },
                    "scale_3_amount": {
                        "type": "number",
                        "format": "float",
                        "description": "Shipping cost for scale_3_from or more items"
                    },
                    "scale_4_from": {
                        "type": "integer",
                        "description": "Number of items for fourth discount level"
                    },
                    "scale_4_amount": {
                        "type": "number",
                        "format": "float",
                        "description": "Shipping cost for scale_4_from or more items"
                    },
                    "scale_5_from": {
                        "type": "integer",
                        "description": "Number of items for fifth discount level"
                    },
                    "scale_5_amount": {
                        "type": "number",
                        "format": "float",
                        "description": "Shipping cost for scale_5_from or more items"
                    }
                }
            },
            "property_count": 20
        },
        "/createUpgrade": {
            "path": "/createUpgrade",
            "method": "POST",
            "summary": "Create an upgrade",
            "schema": {
                "type": "object",
                "required": [
                    "name",
                    "to_product_id"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the new upgrade"
                    },
                    "to_product_id": {
                        "type": "integer",
                        "description": "The product ID being sold as the upgrade"
                    },
                    "upgrade_from": {
                        "type": "string",
                        "description": "Comma-separated list of product IDs that can be upgraded from. Changes take effect immediately.",
                        "default": ""
                    },
                    "downgrade_from": {
                        "type": "string",
                        "description": "Comma-separated list of product IDs that can be downgraded from. Changes take effect next billing period.",
                        "default": ""
                    },
                    "special_offer_for": {
                        "type": "string",
                        "description": "Comma-separated list of product IDs eligible for special member offers",
                        "default": ""
                    },
                    "fallback_product_id": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Product ID to offer if upgrade is not possible",
                        "default": null
                    },
                    "is_active": {
                        "type": "string",
                        "enum": [
                            "Y",
                            "N"
                        ],
                        "default": "Y",
                        "description": "Whether the upgrade is active and purchasable"
                    },
                    "buyer_readonly_keys": {
                        "type": "string",
                        "enum": [
                            "none",
                            "email",
                            "email_and_name",
                            "all"
                        ],
                        "default": "none",
                        "description": "Determines which buyer data fields are protected:\n* none - All fields editable\n* email - Only email protected\n* email_and_name - Email and name protected\n* all - All fields protected\n"
                    }
                }
            },
            "property_count": 8
        },
        "/createUpgradePurchase": {
            "path": "/createUpgradePurchase",
            "method": "POST",
            "summary": "Create an upgrade purchase",
            "schema": {
                "type": "object",
                "required": [
                    "purchase_ids",
                    "upgrade_id"
                ],
                "properties": {
                    "purchase_ids": {
                        "type": "string",
                        "description": "Comma-separated list of purchase IDs. One matching purchase will be selected for upgrade."
                    },
                    "upgrade_id": {
                        "type": "string",
                        "description": "ID of the upgrade to apply. Can be numeric ID (NNN) or ID with authkey (NNN-XXXXXXX)."
                    },
                    "payment_plan_id": {
                        "type": "string",
                        "description": "ID or index (starting with 1) of the payment plan to apply to the new purchase"
                    },
                    "quantities": {
                        "type": "object",
                        "description": "Quantities for main product and addons. Keys can be either:\n- Item positions (starting with 1)\n- Product IDs\n",
                        "example": {
                            "1": 1,
                            "2": 5
                        }
                    }
                }
            },
            "property_count": 4
        },
        "/createVoucher": {
            "path": "/createVoucher",
            "method": "POST",
            "summary": "Create a discount voucher",
            "schema": {
                "type": "object",
                "required": [
                    "code"
                ],
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "The voucher code"
                    },
                    "product_ids": {
                        "type": "string",
                        "description": "Comma-separated list of product IDs this voucher applies to",
                        "default": "all"
                    },
                    "valid_from": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Point in time from when the code becomes valid (e.g. 2017-12-31 12:00:00)"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Point in time when the code becomes invalid"
                    },
                    "first_rate": {
                        "type": "number",
                        "format": "float",
                        "description": "Discount percentage on first payment (subscriptions/installments) or single payment"
                    },
                    "other_rates": {
                        "type": "number",
                        "format": "float",
                        "description": "Discount percentage on follow-up payments (subscriptions/installments)"
                    },
                    "first_amount": {
                        "type": "number",
                        "format": "float",
                        "description": "Fixed discount amount on first/single payment"
                    },
                    "other_amounts": {
                        "type": "number",
                        "format": "float",
                        "description": "Fixed discount amount on follow-up payments"
                    },
                    "currency": {
                        "type": "string",
                        "description": "Currency code for the fixed discount amounts"
                    },
                    "is_count_limited": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether the number of uses is limited"
                    },
                    "count_left": {
                        "type": "integer",
                        "default": 1,
                        "description": "Number of remaining uses if is_count_limited is true"
                    },
                    "upgrade_policy": {
                        "type": "string",
                        "enum": [
                            "valid",
                            "other_only",
                            "not_valid"
                        ],
                        "default": "valid",
                        "description": "How the code is used for upgrades:\n* valid - voucher fully usable\n* other_only - only discount on follow-up installments\n* not_valid - voucher not usable\n"
                    }
                }
            },
            "property_count": 12
        },
        "ipnSetup": {
            "path": "/ipnSetup",
            "method": "POST",
            "summary": "Create IPN connection",
            "schema": {
                "type": "object",
                "required": [
                    "ipn_url",
                    "name",
                    "product_ids"
                ],
                "properties": {
                    "ipn_url": {
                        "type": "string",
                        "description": "URL where Digistore24 sends the IPN notification"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name listed on Digistore (e.g. your platform name)"
                    },
                    "product_ids": {
                        "type": "string",
                        "description": "\"all\" or a comma-separated list of product IDs"
                    },
                    "domain_id": {
                        "type": "string",
                        "description": "Used to delete the IPN connection and ensure uniqueness. Usually your platform name"
                    },
                    "categories": {
                        "type": "string",
                        "description": "Comma separated list of transaction categories",
                        "example": "orders,affiliations,e-tickets,custom forms"
                    },
                    "transactions": {
                        "type": "string",
                        "description": "Comma-separated list of transaction types",
                        "default": "payment,refund,chargeback,payment_missed",
                        "example": "payment,refund,chargeback,payment_missed,rebill_cancelled,rebill_resumed,last_paid_day"
                    },
                    "timing": {
                        "type": "string",
                        "enum": [
                            "before_thankyou",
                            "delayed"
                        ],
                        "default": "before_thankyou",
                        "description": "Controls when the IPN notification is sent"
                    },
                    "sha_passphrase": {
                        "type": "string",
                        "maxLength": 63,
                        "description": "Password for signing parameters. Use \"random\" for auto-generated 30-char password"
                    },
                    "newsletter_send_policy": {
                        "type": "string",
                        "enum": [
                            "end_policy_send_always",
                            "end_if_not_optout",
                            "end_if_optout",
                            "end_if_optin"
                        ],
                        "default": "end_policy_send_always",
                        "description": "Controls when to send IPN based on newsletter opt-in status"
                    }
                }
            },
            "property_count": 9
        },
        "updateAffiliateCommission": {
            "path": "/updateAffiliateCommission",
            "method": "PUT",
            "summary": "Update affiliate commission",
            "schema": {
                "type": "object",
                "properties": {
                    "commission_rate": {
                        "type": "number",
                        "format": "float",
                        "description": "Percentage of the affiliate commission"
                    },
                    "commission_fix": {
                        "type": "number",
                        "format": "float",
                        "description": "Commission amount (in the specified currency)"
                    },
                    "commission_currency": {
                        "type": "string",
                        "description": "Currency of the commission amount (if specified)"
                    },
                    "approval_status": {
                        "type": "string",
                        "enum": [
                            "new",
                            "approved",
                            "rejected",
                            "pending"
                        ],
                        "description": "Approval status of the affiliation"
                    }
                }
            },
            "property_count": 4
        },
        "updateBuyer": {
            "path": "/updateBuyer",
            "method": "PUT",
            "summary": "Update a buyer",
            "schema": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "Buyer's email address"
                    },
                    "first_name": {
                        "type": "string",
                        "description": "Buyer's first name"
                    },
                    "last_name": {
                        "type": "string",
                        "description": "Buyer's last name"
                    },
                    "salutation": {
                        "type": "string",
                        "enum": [
                            "",
                            "M",
                            "F"
                        ],
                        "description": "Buyer's salutation (empty, M or F)"
                    },
                    "title": {
                        "type": "string",
                        "description": "Buyer's title"
                    },
                    "company": {
                        "type": "string",
                        "description": "Buyer's company name"
                    },
                    "street_name": {
                        "type": "string",
                        "description": "Street name"
                    },
                    "street_number": {
                        "type": "string",
                        "description": "Street number"
                    },
                    "phone_number": {
                        "type": "string",
                        "description": "Phone number (can be overwritten with an empty string)"
                    },
                    "city": {
                        "type": "string",
                        "description": "City"
                    },
                    "zipcode": {
                        "type": "string",
                        "description": "ZIP/Postal code"
                    },
                    "state": {
                        "type": "string",
                        "description": "State/Province"
                    },
                    "country": {
                        "type": "string",
                        "description": "Two-digit ISO country code (e.g., DE or AT)"
                    }
                }
            },
            "property_count": 13
        },
        "updateDelivery": {
            "path": "/updateDelivery",
            "method": "PUT",
            "summary": "Update a delivery",
            "schema": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "request",
                                    "in_progress",
                                    "delivery",
                                    "partial_delivery",
                                    "return",
                                    "cancel"
                                ],
                                "description": "The type of delivery status"
                            },
                            "is_shipped": {
                                "type": "boolean",
                                "description": "Y = The product has been shipped (type is set to 'delivery'), N = The delivery was cancelled (type is set to 'cancel')"
                            },
                            "quantity_delivered": {
                                "type": "integer",
                                "description": "Sets the delivery quantity to the given value"
                            },
                            "add_quantity_delivered": {
                                "type": "integer",
                                "description": "Adds the given value to the delivery quantity"
                            },
                            "is_shipped_by_reseller_from": {
                                "type": "string",
                                "description": "If you are a fulfillment center, set this parameter to your code if is_shippment_by_reseller_id is set for a delivery"
                            }
                        }
                    },
                    "tracking": {
                        "type": "array",
                        "description": "List of tracking information",
                        "items": {
                            "type": "object",
                            "properties": {
                                "parcel_service": {
                                    "type": "string",
                                    "description": "The parcel service key (see https://www.digistore24.com/support/parcel_services)"
                                },
                                "tracking_id": {
                                    "type": "string",
                                    "description": "The tracking ID for the shipment"
                                },
                                "expect_delivery_at": {
                                    "type": "string",
                                    "format": "date",
                                    "description": "Expected delivery date"
                                },
                                "quantity": {
                                    "type": "integer",
                                    "description": "Quantity of items in this tracking entry (default is all items)"
                                },
                                "operation": {
                                    "type": "string",
                                    "enum": [
                                        "create_or_update",
                                        "delete"
                                    ],
                                    "default": "create_or_update",
                                    "description": "Operation to perform on the tracking information"
                                }
                            }
                        }
                    }
                }
            },
            "property_count": 2
        },
        "updateOrderform": {
            "path": "/updateOrderform",
            "method": "PUT",
            "summary": "Update an order form",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the order form"
                    },
                    "product_id": {
                        "type": "integer",
                        "description": "ID of the product associated with this order form"
                    },
                    "paymentplan_id": {
                        "type": "integer",
                        "description": "ID of the payment plan to use"
                    },
                    "is_active": {
                        "type": "boolean",
                        "description": "Whether the order form is active"
                    },
                    "is_default": {
                        "type": "boolean",
                        "description": "Whether this is the default order form for the product"
                    },
                    "theme": {
                        "type": "string",
                        "description": "Theme of the order form"
                    },
                    "language": {
                        "type": "string",
                        "description": "Language code for the order form"
                    },
                    "custom_css": {
                        "type": "string",
                        "description": "Custom CSS for the order form"
                    },
                    "custom_js": {
                        "type": "string",
                        "description": "Custom JavaScript for the order form"
                    },
                    "custom_html": {
                        "type": "string",
                        "description": "Custom HTML for the order form"
                    },
                    "custom_fields": {
                        "type": "array",
                        "description": "Custom fields configuration",
                        "items": {
                            "type": "object"
                        }
                    },
                    "upsell_settings": {
                        "type": "object",
                        "description": "Settings for upsells"
                    }
                }
            },
            "property_count": 12
        },
        "updatePaymentplan": {
            "path": "/updatePaymentplan",
            "method": "PUT",
            "summary": "Update a payment plan",
            "schema": {
                "type": "object",
                "properties": {
                    "first_amount": {
                        "type": "number",
                        "format": "float",
                        "description": "The amount for the first payment"
                    },
                    "first_billing_interval": {
                        "type": "string",
                        "description": "The billing interval for the first payment"
                    },
                    "currency": {
                        "type": "string",
                        "description": "The currency code for the payment plan (e.g., USD, EUR)"
                    },
                    "other_amounts": {
                        "type": "number",
                        "format": "float",
                        "description": "The amount for subsequent payments"
                    },
                    "other_billing_intervals": {
                        "type": "string",
                        "description": "The billing interval for subsequent payments"
                    },
                    "number_of_installments": {
                        "type": "integer",
                        "description": "The number of installments (0 for subscription, 1 for single payment, >=2 for installment plan)"
                    },
                    "is_active": {
                        "type": "boolean",
                        "description": "Whether the payment plan is active"
                    },
                    "cancel_policy": {
                        "type": "string",
                        "enum": [
                            "6m_0",
                            "6m_6m",
                            "6m_12m",
                            "12m_0",
                            "12m_3m",
                            "12m_6m",
                            "12m_12m",
                            "24m_0",
                            "24m_6m",
                            "24m_12m"
                        ],
                        "description": "The cancellation policy (minimum term) for the payment plan"
                    }
                }
            },
            "property_count": 8
        },
        "updateProduct": {
            "path": "/updateProduct",
            "method": "PUT",
            "summary": "Update a product",
            "schema": {
                "type": "object",
                "properties": {
                    "name_de": {
                        "type": "string",
                        "maxLength": 63,
                        "description": "Product name in German"
                    },
                    "name_en": {
                        "type": "string",
                        "maxLength": 63,
                        "description": "Product name in English"
                    },
                    "name_es": {
                        "type": "string",
                        "maxLength": 63,
                        "description": "Product name in Spanish"
                    },
                    "name_intern": {
                        "type": "string",
                        "maxLength": 63,
                        "description": "Internal product name"
                    },
                    "description_de": {
                        "type": "string",
                        "description": "Product description in German (filtered HTML)"
                    },
                    "description_en": {
                        "type": "string",
                        "description": "Product description in English (filtered HTML)"
                    },
                    "description_es": {
                        "type": "string",
                        "description": "Product description in Spanish (filtered HTML)"
                    },
                    "salespage_url": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "URL of the sales page"
                    },
                    "upsell_salespage_url": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "URL of the upsell sales page"
                    },
                    "thankyou_url": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "URL of the thank you page"
                    },
                    "image_url": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "URL of the product image"
                    },
                    "product_type_id": {
                        "type": "integer",
                        "description": "Product type ID (call getGlobalSettings for valid product type IDs)"
                    },
                    "currency": {
                        "type": "string",
                        "description": "List of possible currencies for payments for this product (e.g., USD,EUR)"
                    },
                    "approval_status": {
                        "type": "string",
                        "enum": [
                            "new",
                            "pending"
                        ],
                        "description": "Approval status (applies to all resellers of the vendor)"
                    },
                    "affiliate_commision": {
                        "type": "number",
                        "format": "float",
                        "description": "Commission for affiliates"
                    },
                    "buyer_type": {
                        "type": "string",
                        "enum": [
                            "consumer",
                            "business"
                        ],
                        "description": "consumer = prices include VAT, business = prices exclude VAT"
                    },
                    "is_address_input_mandatory": {
                        "type": "boolean",
                        "description": "Y = buyer must always enter their address, N = buyer must only enter address if required for delivery"
                    },
                    "add_order_data_to_thankyou_page_url": {
                        "type": "boolean",
                        "description": "Y = order data is added to URL when directing buyer to thank you page, N = no order data is added"
                    }
                }
            },
            "property_count": 18
        },
        "updateProductGroup": {
            "path": "/updateProductGroup",
            "method": "PUT",
            "summary": "Update a product group",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 31,
                        "description": "Product group name. Maximum 31 characters."
                    },
                    "position": {
                        "type": "integer",
                        "default": 10,
                        "description": "The display order."
                    },
                    "is_shown_as_tab": {
                        "type": "boolean",
                        "description": "If true, the group is displayed as a tab in the product list."
                    }
                }
            },
            "property_count": 3
        },
        "updatePurchase": {
            "path": "/updatePurchase",
            "method": "PUT",
            "summary": "Update a purchase",
            "schema": {
                "type": "object",
                "properties": {
                    "tracking_param": {
                        "type": "string",
                        "description": "The vendor's tracking key"
                    },
                    "custom": {
                        "type": "string",
                        "description": "The custom field"
                    },
                    "unlock_invoices": {
                        "type": "boolean",
                        "description": "If true, access to order details and invoices will be granted to the buyer. Invoice and order details links will then work again. By default, access expires after 3 years."
                    },
                    "next_payment_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Extend the rebilling payment interval. Use this to grant the buyer a payment pause. It's not possible to shorten the payment intervals."
                    }
                }
            },
            "property_count": 4
        },
        "updateServiceProofRequest": {
            "path": "/updateServiceProofRequest",
            "method": "PUT",
            "summary": "Update a service proof request",
            "schema": {
                "type": "object",
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "type": "object",
                        "required": [
                            "request_status"
                        ],
                        "properties": {
                            "request_status": {
                                "type": "string",
                                "enum": [
                                    "proof_provided",
                                    "exec_refund"
                                ],
                                "description": "Status of the request - either providing proof or executing the refund"
                            },
                            "message": {
                                "type": "string",
                                "description": "Additional message or explanation about the proof or refund decision"
                            }
                        }
                    },
                    "files": {
                        "type": "array",
                        "description": "Array of files that serve as proof of service delivery",
                        "items": {
                            "type": "object",
                            "required": [
                                "url"
                            ],
                            "properties": {
                                "url": {
                                    "type": "string",
                                    "description": "Download URL for file contents"
                                },
                                "filename": {
                                    "type": "string",
                                    "description": "Optional filename for the file"
                                }
                            }
                        }
                    }
                }
            },
            "property_count": 2
        },
        "updateShippingCostPolicy": {
            "path": "/updateShippingCostPolicy",
            "method": "PUT",
            "summary": "Update a shipping cost policy",
            "schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 63,
                        "description": "Name of the shipping cost policy"
                    },
                    "label_XX": {
                        "type": "string",
                        "maxLength": 63,
                        "description": "Label on order form. Replace XX by the desired language code (e.g., label_en, label_de)"
                    },
                    "position": {
                        "type": "integer",
                        "default": 100,
                        "description": "Display position of the policy"
                    },
                    "is_active": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether the policy is active"
                    },
                    "for_product_ids": {
                        "type": "string",
                        "description": "Comma-separated list of product IDs this policy applies to. Default is \"all\""
                    },
                    "for_countries": {
                        "type": "string",
                        "description": "Comma-separated list of two-character ISO country codes this policy applies to (e.g., US,CA,UK). Default is \"all\""
                    },
                    "for_currencies": {
                        "type": "string",
                        "description": "Comma-separated list of three-character currency codes this policy applies to (e.g., USD,EUR). Default is \"all\""
                    },
                    "fee_type": {
                        "type": "string",
                        "enum": [
                            "total_fee",
                            "fee_per_unit"
                        ],
                        "description": "Type of fee calculation"
                    },
                    "billing_cycle": {
                        "type": "string",
                        "enum": [
                            "once",
                            "monthly"
                        ],
                        "description": "When the shipping fee is charged"
                    },
                    "currency": {
                        "type": "string",
                        "description": "Currency of the shipping fees (e.g., USD, EUR)"
                    },
                    "scale_level_count": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 5,
                        "default": 1,
                        "description": "Number of discount levels (1-5)"
                    },
                    "scale_1_amount": {
                        "type": "number",
                        "format": "float",
                        "description": "Shipping cost amount for the first level"
                    },
                    "scale_2_from": {
                        "type": "integer",
                        "description": "Number of items for second discount level"
                    },
                    "scale_2_amount": {
                        "type": "number",
                        "format": "float",
                        "description": "Shipping cost amount for scale_2_from or more items"
                    },
                    "scale_3_from": {
                        "type": "integer",
                        "description": "Number of items for third discount level"
                    },
                    "scale_3_amount": {
                        "type": "number",
                        "format": "float",
                        "description": "Shipping cost amount for scale_3_from or more items"
                    },
                    "scale_4_from": {
                        "type": "integer",
                        "description": "Number of items for fourth discount level"
                    },
                    "scale_4_amount": {
                        "type": "number",
                        "format": "float",
                        "description": "Shipping cost amount for scale_4_from or more items"
                    },
                    "scale_5_from": {
                        "type": "integer",
                        "description": "Number of items for fifth discount level"
                    },
                    "scale_5_amount": {
                        "type": "number",
                        "format": "float",
                        "description": "Shipping cost amount for scale_5_from or more items"
                    }
                }
            },
            "property_count": 20
        },
        "updateVoucher": {
            "path": "/updateVoucher",
            "method": "PUT",
            "summary": "Update a voucher",
            "schema": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "The voucher code"
                    },
                    "product_ids": {
                        "type": "string",
                        "description": "\"all\" or a comma-separated list of product IDs for which this voucher code is valid"
                    },
                    "valid_from": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time from when the code is valid (e.g. 2017-12-31 12:00:00). Leave empty to remove a start time."
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time when the code becomes invalid. Leave empty to remove an end time."
                    },
                    "first_rate": {
                        "type": "number",
                        "description": "The discount in percent on the first payment (for subscription and installment payments) or on the purchase amount for a single payment"
                    },
                    "other_rates": {
                        "type": "number",
                        "description": "The discount in percent on the follow-up payments (for subscription and installment payments)"
                    },
                    "first_amount": {
                        "type": "number",
                        "description": "The discount as a fixed amount on the first payment/single payment"
                    },
                    "other_amounts": {
                        "type": "number",
                        "description": "The discount as a fixed amount on the follow-up payments"
                    },
                    "currency": {
                        "type": "string",
                        "description": "Currency of the discount amounts"
                    },
                    "is_count_limited": {
                        "type": "boolean",
                        "description": "For FALSE (default), the code can be used without limit. For TRUE, usage is limited."
                    },
                    "count_left": {
                        "type": "integer",
                        "description": "If is_count_limited is TRUE, the number of times it can still be used. Default is 1."
                    },
                    "upgrade_policy": {
                        "type": "string",
                        "enum": [
                            "valid",
                            "other_only",
                            "not_valid"
                        ],
                        "description": "Determines how the code is used for upgrades"
                    }
                }
            },
            "property_count": 12
        }
    },
    "complex_properties": {
        "DataData": {
            "property_name": "data",
            "endpoint": "updateServiceProofRequest",
            "path": "/updateServiceProofRequest",
            "schema": {
                "type": "object",
                "required": [
                    "request_status"
                ],
                "properties": {
                    "request_status": {
                        "type": "string",
                        "enum": [
                            "proof_provided",
                            "exec_refund"
                        ],
                        "description": "Status of the request - either providing proof or executing the refund"
                    },
                    "message": {
                        "type": "string",
                        "description": "Additional message or explanation about the proof or refund decision"
                    }
                }
            },
            "used_in": [
                "updateServiceProofRequest"
            ]
        }
    },
    "existing_dtos": [
        "AddonData",
        "BuyerData",
        "PaymentPlanData",
        "PlaceholderData",
        "TrackingData"
    ],
    "recommended_dtos": []
}